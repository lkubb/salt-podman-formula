# Autogenerated. Do not edit this by hand, use `copier update`.
---
_commit: 0.1.0
_src_path: https://github.com/lkubb/salt-formula-copier
abbr_pysafe: podman
author: lkubb
config: /etc/containers
flavor_init: general
lookup:
  compose:
    docker:
      compose_version: 2.6.1
      latest:
        hash: https://github.com/docker/compose/releases/download/v{version}/docker-compose-linux-x86_64.sha256
        source: https://github.com/docker/compose/releases/download/v{version}/docker-compose-linux-x86_64
      legacy:
        hash: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-linux-x86_64.sha256
        source: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-linux-x86_64
      legacy_versions:
        - '1'
        - '2'
        - '3'
        - '4.0'
    podman:
      legacy_versions:
        - '1'
        - '2'
        - '3.0'
      pip: podman-compose
      pip_legacy: podman-compose==0.1.11
      repo: https://github.com/containers/podman-compose
  config_files:
    containers: containers.conf
    mounts: mounts.conf
    policy: policy.json
    registries: registries.conf
    seccomp: /usr/share/containers/seccomp.json
    storage: storage.conf
  containers:
    user:
      name: foo
    base: /opt/containers
  user:
    system: false
  required_pkgs:
    - git
    - python3-pip
  salt_compat:
    pips:
      - docker
    pkgs:
      - python3-pip
    sockets:
      docker: /var/run/docker.sock
      podman: /var/run/podman/podman.sock
  service:
    install_unit_files: true
    name: podman
    path: /etc/systemd/system/{name}.service
    socket_path: /etc/systemd/system/{name}.socket
needs_repo: true
pkg: podman
service: podman
service_abbr: podman
service_name: Podman
settings:
  compose:
    install: false
    install_modules: false
    podman_compose_rev: false
  config:
    global:
      containers:
        containers: {}
        engine: {}
        machine: {}
        network: {}
        secrets: {}
        service_destinations: {}
      mounts: []
      policy:
        default:
          - type: insecureAcceptAnything
      registries:
        registry: []
        unqualified-search-registries:
          - docker.io
      storage:
        storage:
          driver: overlay
          graphroot: /var/lib/containers/storage
          options:
            additionalimagestores: []
          runroot: /run/containers/storage
    user: {}
  containers: {}
  debian_experimental: false
  debian_unstable: false
  install_method: pkg
  python_install_method: pip
  salt_compat: false
  selinux:
    boolean:
      virt_use_samba: null
  service_enable: false
  version: latest
subcomponent: ''
initialized: true
flavor_recorded: general
